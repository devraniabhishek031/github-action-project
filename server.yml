name: abhishek-test

on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  build-push-ssh-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPO_URI: ${{ secrets.ECR_REPOSITORY_URI }}

    steps:
      - name: ‚¨áÔ∏è Checkout Code
        uses: actions/checkout@v4

      - name: üì¶ Write .env file
        run: echo "$DOTENV_CONTENT" > .env
        env:
          DOTENV_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}

      - name: üïì Generate Image Tag with Timestamp
        id: image-tag
        run: echo "tag=staging-$(date -u +'%Y-%m-%dT%H-%M-%S')" >> "$GITHUB_OUTPUT"

      - name: üê≥ Build Docker Image
        run: docker build -t $ECR_REPO_URI:${{ steps.image-tag.outputs.tag }} .

      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: üîì Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_REPO_URI

      - name: üöÄ Push Docker Image to ECR
        run: docker push $ECR_REPO_URI:${{ steps.image-tag.outputs.tag }}

      - name: üîÅ Deploy to EC2 via SSH (key-based auth)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_STG }}
          username: ${{ secrets.EC2_USERNAME_STG }}
          key: ${{ secrets.EC2_PRIVATE_KEY_STG }}
          port: ${{ secrets.EC2_PORT_STG }}
          script: |
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_REGION=${{ secrets.AWS_REGION }}
            export ECR_REPO_URI=${{ secrets.ECR_REPOSITORY_URI }}
            export IMAGE_TAG=${{ steps.image-tag.outputs.tag }}
            IMAGE="$ECR_REPO_URI:$IMAGE_TAG"

            echo "üîì Logging into ECR..."
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO_URI

            echo "üì• Pulling image: $IMAGE"
            docker pull $IMAGE || exit 1

            echo "üõë Stopping and removing old container (if running)"
            docker stop my-app || echo "No running container to stop"
            docker rm my-app || echo "No container to remove"

            echo "üöÄ Running new container"
            docker run -d --name my-app -p 3000:3000 $IMAGE
